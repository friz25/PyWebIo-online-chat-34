# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calc.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(323, 456)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.b_erase = QtWidgets.QPushButton(self.centralwidget)
        self.b_erase.setGeometry(QtCore.QRect(240, 90, 80, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_erase.setFont(font)
        self.b_erase.setObjectName("b_erase")
        self.b_up_2 = QtWidgets.QPushButton(self.centralwidget)
        self.b_up_2.setGeometry(QtCore.QRect(80, 130, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_up_2.setFont(font)
        self.b_up_2.setObjectName("b_up_2")
        self.b_up_1 = QtWidgets.QPushButton(self.centralwidget)
        self.b_up_1.setGeometry(QtCore.QRect(0, 130, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_up_1.setFont(font)
        self.b_up_1.setObjectName("b_up_1")
        self.b_up_3 = QtWidgets.QPushButton(self.centralwidget)
        self.b_up_3.setGeometry(QtCore.QRect(160, 130, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_up_3.setFont(font)
        self.b_up_3.setObjectName("b_up_3")
        self.b_minus = QtWidgets.QPushButton(self.centralwidget)
        self.b_minus.setGeometry(QtCore.QRect(240, 250, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_minus.setFont(font)
        self.b_minus.setObjectName("b_minus")
        self.b4 = QtWidgets.QPushButton(self.centralwidget)
        self.b4.setGeometry(QtCore.QRect(0, 250, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b4.setFont(font)
        self.b4.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b4.setObjectName("b4")
        self.b6 = QtWidgets.QPushButton(self.centralwidget)
        self.b6.setGeometry(QtCore.QRect(161, 250, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b6.setFont(font)
        self.b6.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b6.setObjectName("b6")
        self.b5 = QtWidgets.QPushButton(self.centralwidget)
        self.b5.setGeometry(QtCore.QRect(80, 250, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b5.setFont(font)
        self.b5.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b5.setObjectName("b5")
        self.b_plus = QtWidgets.QPushButton(self.centralwidget)
        self.b_plus.setGeometry(QtCore.QRect(240, 310, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_plus.setFont(font)
        self.b_plus.setObjectName("b_plus")
        self.b1 = QtWidgets.QPushButton(self.centralwidget)
        self.b1.setGeometry(QtCore.QRect(0, 310, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b1.setFont(font)
        self.b1.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b1.setObjectName("b1")
        self.b3 = QtWidgets.QPushButton(self.centralwidget)
        self.b3.setGeometry(QtCore.QRect(161, 310, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b3.setFont(font)
        self.b3.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b3.setObjectName("b3")
        self.b2 = QtWidgets.QPushButton(self.centralwidget)
        self.b2.setGeometry(QtCore.QRect(81, 311, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b2.setFont(font)
        self.b2.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b2.setObjectName("b2")
        self.b_equal = QtWidgets.QPushButton(self.centralwidget)
        self.b_equal.setGeometry(QtCore.QRect(239, 369, 80, 64))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_equal.setFont(font)
        self.b_equal.setObjectName("b_equal")
        self.b_plus_minus = QtWidgets.QPushButton(self.centralwidget)
        self.b_plus_minus.setGeometry(QtCore.QRect(0, 370, 80, 63))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_plus_minus.setFont(font)
        self.b_plus_minus.setObjectName("b_plus_minus")
        self.b_dot = QtWidgets.QPushButton(self.centralwidget)
        self.b_dot.setGeometry(QtCore.QRect(160, 370, 80, 63))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_dot.setFont(font)
        self.b_dot.setObjectName("b_dot")
        self.b0 = QtWidgets.QPushButton(self.centralwidget)
        self.b0.setGeometry(QtCore.QRect(80, 372, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b0.setFont(font)
        self.b0.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b0.setObjectName("b0")
        self.l_rez = QtWidgets.QLabel(self.centralwidget)
        self.l_rez.setGeometry(QtCore.QRect(10, 0, 301, 81))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.l_rez.setFont(font)
        self.l_rez.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.l_rez.setFrameShadow(QtWidgets.QFrame.Plain)
        self.l_rez.setText("0")
        self.l_rez.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.l_rez.setIndent(0)
        self.l_rez.setObjectName("l_rez")
        self.b_mult = QtWidgets.QPushButton(self.centralwidget)
        self.b_mult.setGeometry(QtCore.QRect(240, 190, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_mult.setFont(font)
        self.b_mult.setObjectName("b_mult")
        self.b9 = QtWidgets.QPushButton(self.centralwidget)
        self.b9.setGeometry(QtCore.QRect(161, 190, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b9.setFont(font)
        self.b9.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b9.setObjectName("b9")
        self.b7 = QtWidgets.QPushButton(self.centralwidget)
        self.b7.setGeometry(QtCore.QRect(0, 190, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b7.setFont(font)
        self.b7.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b7.setObjectName("b7")
        self.b8 = QtWidgets.QPushButton(self.centralwidget)
        self.b8.setGeometry(QtCore.QRect(80, 190, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b8.setFont(font)
        self.b8.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.b8.setObjectName("b8")
        self.b_divide = QtWidgets.QPushButton(self.centralwidget)
        self.b_divide.setGeometry(QtCore.QRect(240, 130, 80, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.b_divide.setFont(font)
        self.b_divide.setObjectName("b_divide")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_functions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Калькулятор by friz"))
        self.b_erase.setText(_translate("MainWindow", "<<"))
        self.b_up_2.setText(_translate("MainWindow", "CE"))
        self.b_up_1.setText(_translate("MainWindow", "%"))
        self.b_up_3.setText(_translate("MainWindow", "C"))
        self.b_minus.setText(_translate("MainWindow", "-"))
        self.b4.setText(_translate("MainWindow", "4"))
        self.b6.setText(_translate("MainWindow", "6"))
        self.b5.setText(_translate("MainWindow", "5"))
        self.b_plus.setText(_translate("MainWindow", "+"))
        self.b1.setText(_translate("MainWindow", "1"))
        self.b3.setText(_translate("MainWindow", "3"))
        self.b2.setText(_translate("MainWindow", "2"))
        self.b_equal.setText(_translate("MainWindow", "="))
        self.b_plus_minus.setText(_translate("MainWindow", "+ / -"))
        self.b_dot.setText(_translate("MainWindow", "."))
        self.b0.setText(_translate("MainWindow", "0"))
        self.b_mult.setText(_translate("MainWindow", "X"))
        self.b9.setText(_translate("MainWindow", "9"))
        self.b7.setText(_translate("MainWindow", "7"))
        self.b8.setText(_translate("MainWindow", "8"))
        self.b_divide.setText(_translate("MainWindow", "/"))

    def add_functions(self):
        self.b0.clicked.connect(lambda: self.write_number(self.b0.text()))
        self.b1.clicked.connect(lambda: self.write_number(self.b1.text()))
        self.b2.clicked.connect(lambda: self.write_number(self.b2.text()))
        self.b3.clicked.connect(lambda: self.write_number(self.b3.text()))
        self.b4.clicked.connect(lambda: self.write_number(self.b4.text()))
        self.b5.clicked.connect(lambda: self.write_number(self.b5.text()))
        self.b6.clicked.connect(lambda: self.write_number(self.b6.text()))
        self.b7.clicked.connect(lambda: self.write_number(self.b7.text()))
        self.b8.clicked.connect(lambda: self.write_number(self.b8.text()))
        self.b9.clicked.connect(lambda: self.write_number(self.b9.text()))

        self.b_dot.clicked.connect(lambda: self.write_number(self.b_dot.text()))

        self.b_minus.clicked.connect(lambda: self.write_number(self.b_minus.text()))
        self.b_plus.clicked.connect(lambda: self.write_number(self.b_plus.text()))
        self.b_mult.clicked.connect(lambda: self.write_number("*"))
        self.b_divide.clicked.connect(lambda: self.write_number(self.b_divide.text()))

        self.b_up_1.clicked.connect(lambda: self.l_rez.setText(str(eval(self.l_rez.text()+"%2"))))  # "%"
        self.b_erase.clicked.connect(lambda: self.erase_number()) # erase (клик -> строка -1 символ)
        self.b_up_3.clicked.connect(lambda: self.l_rez.setText("0")) # "C"
        # for error testing
        self.b_plus_minus.clicked.connect(lambda: self.plus_minus())
        #self.b_plus_minus.clicked.connect(lambda: self.l_rez.setText("-"+self.l_rez.text())) # "+/-"

        #b_plus_minus клик -> -(self.l_rez.text())

        self.b_equal.clicked.connect(self.results)

    def erase_number(self):
        if self.l_rez.text().startswith("> "):
            self.l_rez.setText(self.l_rez.text()[2:])
            #print(self.l_rez.text())
            #print("len=",len(self.l_rez.text()))
        if len(self.l_rez.text()) == True: #когда остался 1 символ #0
            self.l_rez.setText("0")
        else:
            self.l_rez.setText(self.l_rez.text()[:-1])

    def write_number(self, number):

        if (number in "+-/*") and self.l_rez.text().startswith("> "):
            self.l_rez.setText(self.l_rez.text()[2:]+number) #было "> 32" стало "32+"

        elif self.l_rez.text() == "0" or self.l_rez.text().startswith("> "):
            self.l_rez.setText(number)

        else:
            '''если жмёшь "**"'''
            # если .endswith "+-*/" не ставть (еще один) "+-*/"
           # if map(lambda x: x =  , self.l_rez.text().endswith(n), ("+-*/")) #не знаю как записать
            if (number in "+-/*.") and (self.l_rez.text().endswith('+') or self.l_rez.text().endswith('-') \
               or self.l_rez.text().endswith('*') or self.l_rez.text().endswith('/') or self.l_rez.text().endswith('.')):
                self.l_rez.setText(self.l_rez.text()[:-1])
            '''по умолчанию'''
            self.l_rez.setText(self.l_rez.text()+number)

    def results(self):
        if self.l_rez.text().startswith("> "):
            pass
        elif "/0" in self.l_rez.text():
            self.l_rez.setText("Делить на 0 нельзя")
        else:
            ''' если ввёл /5''' #0/5
            if self.l_rez.text().startswith("/") or self.l_rez.text().startswith("*"):
                self.l_rez.setText("0"+self.l_rez.text())
            '''по умолчанию'''
            if self.l_rez.text().endswith('+') or self.l_rez.text().endswith('-') \
             or self.l_rez.text().endswith('*') or self.l_rez.text().endswith('/'):
                self.l_rez.setText(self.l_rez.text()[:-1])
            res = eval(self.l_rez.text())
            self.l_rez.setText("> " + str(res))
        # если .endswith "+-*/" - удалить последний символ (через while)

    def plus_minus(self):
        error = QMessageBox()
        error.setWindowTitle("Ошибка")
        error.setText("Этот функционал еще не дописан")
        error.setIcon(QMessageBox.Warning)
        error.setStandardButtons(QMessageBox.Reset|QMessageBox.Cancel|QMessageBox.Ok)

        error.setDefaultButton(QMessageBox.Ok)
        error.setInformativeText("[work in progress]")
        error.setDetailedText("Детали ... ")

        error.buttonClicked.connect(self.popup_action)

        error.exec_()

    def popup_action(self, btn):
        if btn.text() == "Ok":
            print("Print Ok")
        elif btn.text() == "Reset":
            self.l_rez.setText("")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
